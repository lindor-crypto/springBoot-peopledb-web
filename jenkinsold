
        stage('Analyse Checkstyle') {
            steps {
                echo "======== Analyse Checkstyle ========"
                sh './gradlew --no-daemon checkstyleMain'
            }
        }

        stage('Archivage du JAR') {
            steps {
                echo "======== Archivage de l\'artefact ========"
                archiveArtifacts artifacts: 'build/libs/*.jar', fingerprint: true
            }
        }

        stage('Build App Image') {
            steps {
                dir('app/springboot-peopledb-web') {
                    script {
                        dockerImage = docker.build(appRegistry + ":$BUILD_NUMBER")
                    }
                }
            }
        }

        stage('Upload App Image') {
            steps {
                script {
                    docker.withRegistry(vprofileRegistry, registryCredential) {
                        dockerImage.push("$BUILD_NUMBER")
                        dockerImage.push('latest')
                    }
                }
            }
        }

        stage('Remove Docker Image') {
            steps {
                echo "ðŸ§¹ Suppression de l'image Docker aprÃ¨s le build..."
                sh 'docker rmi -f $(docker images -a -q) || true'
            }
        }

        stage('Deploy to ecs') {
            steps {
                withAWS(credentials: 'awscreds', region: 'us-east-1') {
                    sh 'aws ecs update-service --cluster ${cluster} --service ${service} --force-new-deployment'
                }
            }
        }